version: 2.0

jobs:
  cogutil:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/cogutil
    steps:
      - run:
          name: Start restoring ccache
          command: date +%d-%m-%Y > /tmp/date
      - restore_cache:
          keys:
            - ccache-{{ checksum "/tmp/date" }}
            - ccache-
      - checkout
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j4
      - run:
          name: Build tests
          command: cd build && make -j4 tests
      - run:
          name: Run tests
          command: cd build && make -j4 test
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - persist_to_workspace:
          root: /ws/
          paths:
            - cogutil
            - ccache

  atomspace:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          PGHOST: opencog-postgres
          PGUSER: opencog_test
          PGPASSWORD: cheese
          CCACHE_DIR: /ws/ccache
      - image: opencog/postgres
        name: opencog-postgres
    working_directory: /ws/atomspace
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j4 install && ldconfig
      - run:
          name: Checkout AtomSpace
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/atomspace .
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j4
      - run:
          name: Build tests
          command: cd build && make -j4 tests
      - run:
          name: Run tests
          command: cd build && make -j4 test
      - run:
          name: Install AtomSpace
          command: cd build && make -j4 install && ldconfig
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - save_cache:
          name: Save GHC Cache
          key: ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
          paths:
            - /root/.stack
      - save_cache:
          name: Save Haskell Deps Cache
          key: haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
          paths:
            - /ws/atomspace/opencog/haskell/.stack-work
      - persist_to_workspace:
          root: /ws/
          paths:
            - atomspace
            - ccache

  cogserver:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/cogserver
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j4 install && ldconfig
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
      - run:
          name: Install AtomSpace
          command: cd /ws/atomspace/build && make -j4 install && ldconfig
      - run:
          name: Checkout CogServer
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/cogserver .
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j2 tests
      - run:
          name: Run tests
          command: cd build && make -j2 test
      - run:
          name: Install URE
          command: cd build && make -j2 install && ldconfig
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - persist_to_workspace:
          root: /ws/
          paths:
            - cogserver
            - ccache

  attention:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/attention
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j4 install && ldconfig
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
      - run:
          name: Install AtomSpace
          command: cd /ws/atomspace/build && make -j4 install && ldconfig
      - run:
          name: Install CogServer
          command: cd /ws/cogserver/build && make -j4 install && ldconfig
      - run:
          name: Checkout Attention
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/attention .
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j2 tests
      - run:
          name: Run tests
          command: cd build && make -j2 test
      - run:
          name: Install URE
          command: cd build && make -j2 install && ldconfig
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - persist_to_workspace:
          root: /ws/
          paths:
            - attention
            - ccache

  ure:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/ure
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j4 install && ldconfig
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
      - run:
          name: Install AtomSpace
          command: cd /ws/atomspace/build && make -j4 install && ldconfig
      - run:
          name: Checkout URE
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/ure .
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j2 tests
      - run:
          name: Run tests
          command: cd build && make -j2 test
      - run:
          name: Install URE
          command: cd build && make -j2 install && ldconfig
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - persist_to_workspace:
          root: /ws/
          paths:
            - ure
            - ccache

  miner:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/miner
    steps:
      - attach_workspace:
          at: /ws/
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j2 install && ldconfig
      - run:
          name: Install AtomSpace
          command: cd /ws/atomspace/build && make -j2 install && ldconfig
      - run:
          name: Install URE
          command: cd /ws/ure/build && make -j2 install && ldconfig
      - run:
          name: Checkout Miner
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/miner .
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j2 tests
      - run:
          name: Run tests
          command: cd build && make -j2 test ARGS=-j2
      - run:
          name: Install Miner
          command: cd build && make -j2 install && ldconfig
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - persist_to_workspace:
          root: /ws/
          paths:
            - miner
            - ccache

  moses:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/moses
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j4 install && ldconfig
      - run:
          name: Checkout MOSES
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/moses .
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j4 tests
      - run:
          name: Run tests
          command: cd build && make -j4 test
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always

  asmoses:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/asmoses
    steps:
      - attach_workspace:
          at: /ws
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j4 install && ldconfig
      - run:
          name: Install AtomSpace
          command: cd /ws/atomspace/build && make -j4 install && ldconfig
      - run:
          name: Checkout AS-MOSES
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/asmoses .
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j2
      - run:
          name: Build tests
          command: cd build && make -j4 tests
      - run:
          name: Run tests
          command: cd build && make -j4 test
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always

  opencog:
    docker:
      - image: opencog/opencog-deps
        user: root
        environment:
          CCACHE_DIR: /ws/ccache
    working_directory: /ws/opencog
    steps:
      - attach_workspace:
          at: /ws
      - restore_cache:
          name: Restore GHC Cache
          keys:
            - ghc-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{ arch }}
      - restore_cache:
          name: Restore Haskell Deps Cache
          keys:
            - haskelldeps-{{checksum "/ws/atomspace/opencog/haskell/stack.yaml"}}-{{checksum "/ws/atomspace/opencog/haskell/opencog-atomspace.cabal"}}-{{ arch }}
      - run:
          name: Install CogUtil
          command: cd /ws/cogutil/build && make -j4 install && ldconfig
      - run:
          name: Install AtomSpace
          command: cd /ws/atomspace/build && make -j4 install && ldconfig
      - run:
          name: Install CogServer
          command: cd /ws/cogserver/build && make -j4 install && ldconfig
      - run:
          name: Install Attention
          command: cd /ws/attention/build && make -j4 install && ldconfig
      - run:
          name: Install URE
          command: cd /ws/ure/build && make -j4 install && ldconfig
      - run:
          name: Checkout OpenCog
          command: git clone --depth 1 https://github.com/$CIRCLE_PROJECT_USERNAME/opencog .
      - run:
          name: CMake Configure
          command: mkdir build && cd build && cmake ..
      - run:
          name: Build
          command: cd build && make -j4
      - run:
          name: Build tests
          command: cd build && make -j4 tests
      - run:
          name: Run tests
          command: cd build && make -j4 test
      - run:
          name: Install OpenCog
          command: cd build && make -j4 install && ldconfig
      - run:
          name: Print test log
          command: cat build/tests/Testing/Temporary/LastTest.log
          when: always
      - persist_to_workspace:
          root: /ws/
          paths:
            - opencog
            - ccache

  package:
    docker:
      - image: opencog/opencog-deps
        user: root
    working_directory: /ws/cogutil
    steps:
      - attach_workspace:
          at: /ws/
      - run:
          name: Build Debian package
          command: cd build && make install && make package
      - store_artifacts:
          path: build/packages/
      - run:
          name: Start storing ccache
          command: date +%d-%m-%Y > /tmp/date
      - save_cache:
          key: ccache-{{ checksum "/tmp/date" }}
          paths:
            - /ws/ccache

workflows:
  version: 2
  build-test-package:
    jobs:
      - cogutil
      - atomspace:
          requires:
            - cogutil
      # - cogserver:
      #     requires:
      #       - atomspace
      # - attention:
      #     requires:
      #       - cogserver
      # - ure:
      #     requires:
      #       - atomspace
      # - miner:
      #     requires:
      #       - ure
      # - moses:
      #     requires:
      #       - cogutil
      # - asmoses:
      #     requires:
      #       - cogutil
      #       - atomspace
      - opencog:
          requires:
            - atomspace
            # - ure
            # - attention
      # - package:
      #     requires:
      #       - opencog
      #     filters:
      #       branches:
      #         only: master
